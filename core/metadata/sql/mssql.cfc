<!--- * * (coldfusion comments are completely stripped out once at compile time, and have zero impact on performance)
Created By: Bassil Karam (bassil.karam@thinkloop.com) - 01/01/2008
Edited By: Bassil Karam (bassil.karam@thinkloop.com) - 07/06/2008
* * --->
<cfcomponent output="false">

	<!--- init --->
	<cffunction name="init" access="public" output="false" returntype="any">
		<cfargument name="Datasource" />

		<cfscript>
			variables.Datasource=arguments.Datasource;
		</cfscript>

		<cfreturn this />
	</cffunction>

	<!--- load meta data --->
	<cffunction name="loadMetaData" access="public" output="false" returntype="query">
		<cfargument name="TableName" type="string" />
		<cfargument name="ColumnList" type="string" hint="List of db columns" />

		<cfset var TableMetaData="" />
		<cfset var currentColumn="" />
		
		<cfquery name="TableMetaData" Datasource="#getDatasource().DSN#" Username="#getDatasource().Username#" Password="#getDatasource().Password#">
		SELECT
			[TableName] = [Query1].[TableName],
			[ColumnName] = [Query1].[ColumnName],
			[Required] = [Query1].[Required],
			[Type] = [Query1].[CFDataType],
			[DBType] = [Query1].[DBDataType],
			[CFSQLType] = [Query1].[CFSQLType],
			[UniqueIndex] = CASE WHEN [Query2].[ColumnName] IS NULL THEN '' ELSE 'PrimaryKey' END,
			[AutoGenerated] = CASE COLUMNPROPERTY(OBJECT_ID([Query1].[TableName]), [Query1].[ColumnName], 'IsIdentity') WHEN 1 THEN 'True' ELSE 'False' END,
			[MinValue] = [Query1].[MinValue],
			[MaxValue] = [Query1].[MaxValue],
			[Scale] = [Query1].[Scale],
			[Position] = [Query1].[ColumnOrder]

		FROM
			(
			SELECT
				[DatabaseName] = [Tables].[Table_Catalog],
				[TableName] = [Columns].[Table_Name],
				[ColumnName] = [Columns].[Column_Name],
				[ColumnOrder] = [Columns].[Ordinal_Position],
				[DBDataType] = [Columns].[Data_Type],
				[Required] =
					CASE [Columns].[Is_Nullable]
						WHEN 'No' THEN 'True'
						ELSE 'False'
					END,

				[CFDataType] =
					CASE [Columns].[Data_Type]
						WHEN 'varchar' THEN 'string'
						WHEN 'nvarchar' THEN 'string'
						WHEN 'char' THEN 'string'
						WHEN 'nchar' THEN 'string'
						WHEN 'uniqueidentifier' THEN 'guid'
						WHEN 'text' THEN 'string'
						WHEN 'ntext' THEN 'string'

						WHEN 'bit' THEN 'boolean'
						WHEN 'tinyint' THEN 'integer'
						WHEN 'smallint' THEN 'integer'
						WHEN 'int' THEN 'integer'
						WHEN 'bigint' THEN 'integer'
						WHEN 'float' THEN 'float'
						WHEN 'decimal' THEN 'float'
						WHEN 'money' THEN 'float'
						WHEN 'smallmoney' THEN 'float'
						WHEN 'real' THEN 'float'
						WHEN 'numeric' THEN 'float'

						WHEN 'smalldatetime' THEN 'date'
						WHEN 'datetime' THEN 'date'

						WHEN 'varbinary' THEN 'binary'
						WHEN 'image' THEN 'binary'

						ELSE 'unknown'
					END,

				[CFSQLType] =
					CASE [Columns].[Data_Type]
						WHEN 'varchar' THEN 'cf_sql_varchar'
						WHEN 'nvarchar' THEN 'cf_sql_varchar'
						WHEN 'char' THEN 'cf_sql_char'
						WHEN 'nchar' THEN 'cf_sql_char'
						WHEN 'uniqueidentifier' THEN 'cf_sql_idstamp'
						WHEN 'text' THEN 'cf_sql_longvarchar'
						WHEN 'ntext' THEN 'cf_sql_longvarchar'

						WHEN 'bit' THEN 'cf_sql_bit'
						WHEN 'tinyint' THEN 'cf_sql_tinyint'
						WHEN 'smallint' THEN 'cf_sql_smallint'
						WHEN 'int' THEN 'cf_sql_integer'
						WHEN 'bigint' THEN 'cf_sql_bigint'
						WHEN 'float' THEN 'cf_sql_float'
						WHEN 'decimal' THEN 'cf_sql_decimal'
						WHEN 'money' THEN 'cf_sql_money'
						WHEN 'smallmoney' THEN 'cf_sql_smallmoney'
						WHEN 'real' THEN 'cf_sql_real'
						WHEN 'numeric' THEN 'cf_sql_numeric'

						WHEN 'smalldatetime' THEN 'cf_sql_timestamp'
						WHEN 'datetime' THEN 'cf_sql_timestamp'

						WHEN 'varbinary' THEN 'cf_sql_varbinary'
						WHEN 'image' THEN 'cf_sql_longvarbinary'

						ELSE 'unknown'
					END,

				[MinValue] =
					CASE [Columns].[Data_Type]
						WHEN 'varchar' THEN '1'
						WHEN 'nvarchar' THEN '1'
						WHEN 'char' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'nchar' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'uniqueidentifier' THEN '36'
						WHEN 'text' THEN '1'
						WHEN 'ntext' THEN '1'

						WHEN 'bit' THEN '1'
						WHEN 'tinyint' THEN '0'
						WHEN 'smallint' THEN '-32768'
						WHEN 'int' THEN '-2147483648'
						WHEN 'bigint' THEN '-9223372036854775808'
						WHEN 'float' THEN '1'
						WHEN 'decimal' THEN '1'
						WHEN 'money' THEN '1'
						WHEN 'smallmoney' THEN '1'
						WHEN 'real' THEN '1'
						WHEN 'numeric' THEN '1'

						WHEN 'smalldatetime' THEN '01/01/1900'
						WHEN 'datetime' THEN '01/01/1753'

						WHEN 'varbinary' THEN '1'
						WHEN 'image' THEN '1'

						ELSE 'unknown'
					END,

				[MaxValue] =
					CASE [Columns].[Data_Type]
						WHEN 'varchar' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'nvarchar' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'char' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'nchar' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'uniqueidentifier' THEN '36'
						WHEN 'text' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)
						WHEN 'ntext' THEN CAST([Columns].[Character_Maximum_Length] AS VARCHAR)

						WHEN 'bit' THEN '1'
						WHEN 'tinyint' THEN '255'
						WHEN 'smallint' THEN '32767'
						WHEN 'int' THEN '2147483647'
						WHEN 'bigint' THEN '9223372036854775807'
						WHEN 'float' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)
						WHEN 'decimal' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)
						WHEN 'money' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)
						WHEN 'smallmoney' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)
						WHEN 'real' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)
						WHEN 'numeric' THEN CAST([Columns].[Numeric_Precision] AS VARCHAR)

						WHEN 'smalldatetime' THEN '06/06/2079'
						WHEN 'datetime' THEN '31/12/9999'

						WHEN 'varbinary' THEN '8000'
						WHEN 'image' THEN '2147483647'

						ELSE 'unknown'
					END,

				[Scale] =
					CASE [Columns].[Data_Type]
						WHEN 'bit' THEN 0
						WHEN 'tinyint' THEN 0
						WHEN 'smallint' THEN 0
						WHEN 'int' THEN 0
						WHEN 'bigint' THEN 0
						WHEN 'float' THEN -1
						WHEN 'decimal' THEN [Columns].[Numeric_Scale]
						WHEN 'money' THEN [Columns].[Numeric_Scale]
						WHEN 'smallmoney' THEN [Columns].[Numeric_Scale]
						WHEN 'real' THEN -1
						WHEN 'numeric' THEN [Columns].[Numeric_Scale]
						ELSE 0
					END
			FROM
				[Information_Schema].[Tables] AS [Tables] INNER JOIN
				[Information_Schema].[Columns] AS [Columns] ON [Tables].[Table_Name] = [Columns].[Table_Name]

			WHERE
				(
				[Tables].[Table_Name] = <cfqueryparam value="#arguments.TableName#" cfsqltype="cf_sql_varchar" />
				AND [Columns].[Column_Name] IN (<cfqueryparam value="#arguments.ColumnList#" cfsqltype="cf_sql_varchar" list="true" />)
				)
			) AS [Query1]

			LEFT OUTER JOIN

			(
			SELECT [KeyColumn].[Table_Name] AS [TableName], [KeyColumn].[Column_Name] AS [ColumnName]
			FROM
				[Information_Schema].[Key_Column_Usage] AS [KeyColumn] INNER JOIN
				[Information_Schema].[Table_Constraints] AS [KeyType] ON [KeyColumn].[Constraint_Name] = [KeyType].[Constraint_Name]
			WHERE [KeyType].[Constraint_Type] = <cfqueryparam value="Primary Key" cfsqltype="cf_sql_varchar" />
								
			) AS Query2
			ON [Query1].[TableName] = [Query2].[TableName] AND [Query1].[ColumnName] = [Query2].[ColumnName]

		ORDER BY
			[Query1].[ColumnOrder]
		</cfquery>

		<cfreturn TableMetaData />
	</cffunction>
	
<!--- * * * * * * * * * * * * --->
<!--- * * * * PRIVATE * * * * --->
<!--- * * * * * * * * * * * * --->

	<!--- get Datasource --->
	<cffunction name="getDatasource" access="private" output="false" returntype="struct">
		<cfreturn variables.Datasource />
	</cffunction>
</cfcomponent>